plugins {
    id 'java'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.9.0' // Use the latest version of the PITest plugin
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

pitest {
    junit5PluginVersion = '1.2.0'
    targetClasses = ['MathUtilsFixed']  //by default "${project.group}.*"
    targetTests = ['MathUtilsTest']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.pitest:pitest-junit5-plugin:1.0.0' // Add PITest JUnit 5 plugin
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.mockito:mockito-core:3.7.7'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.29.0'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.17'
    implementation group: 'com.codeborne', name: 'selenide', version: '7.7.3'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }
}

jacoco {
    toolVersion = "0.8.9"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}


jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }
}


tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}